---
- name: Check if Nessus is installed
  ansible.builtin.command: |
    dpkg-query --show --showformat='${db:Status-Status}|${Version}\n' nessus
  register: dpkg_query_result
  ignore_errors: yes
  changed_when: false

- name: Install Nessus
  block:
    - name: Fetch specified Nessus package from S3
      ansible.builtin.aws_s3:
        bucket: "{{ package_bucket }}"
        object: "{{ package_file }}"
        dest: /tmp/{{ package_file }}
        mode: get
      become: no
      delegate_to: localhost

    - name: Copy local Nessus package (.deb) to remote side
      ansible.builtin.copy:
        src: /tmp/{{ package_file }}
        dest: /tmp/{{ package_file }}
        mode: 0644

    - name: Install specified Nessus version
      ansible.builtin.apt:
        deb: /tmp/{{ package_file }}
        state: present

    - name: Delete Nessus package (.deb) on remote side
      ansible.builtin.file:
        path: /tmp/{{ package_file }}
        state: absent

    - name: Delete local copy of Nessus package
      ansible.builtin.file:
        path: /tmp/{{ package_file }}
        state: absent
      become: no
      delegate_to: localhost
  # Only run this block is Nessus is installed and is the correct
  # version
  when: |
    not dpkg_query_result.stdout is search('installed|%s' | format(version)) | bool

- name: Load var file with package name(s) based on the OS type
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        # Add regex_replace() filters to remove spaces and
        # slashes. This allows the OS family/distribution for Kali,
        # "Kali GNU/Linux", to be easily mapped to a vars file.
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}_{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}.yml"
        - "{{ ansible_os_family | regex_replace('[ /]', '_') }}.yml"
      paths:
        - "{{ role_path }}/vars"

# "expect" and "jq" are used downstream to automate creation of Nessus users
- name: Install expect and jq packages
  ansible.builtin.package:
    name: "{{ package_names }}"
    state: present
